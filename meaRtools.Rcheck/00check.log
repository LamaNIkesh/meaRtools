* using log directory ‘/Users/sg3261/github/meaRtools/meaRtools.Rcheck’
* using R version 3.3.2 (2016-10-31)
* using platform: x86_64-apple-darwin13.4.0 (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘meaRtools/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘meaRtools’ version ‘1.0.0’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘meaRtools’ can be installed ... OK
* checking installed package size ... NOTE
  installed size is  5.5Mb
  sub-directories of 1Mb or more:
    data      1.4Mb
    extdata   3.7Mb
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘calculate_entropy_and_mi’ ‘filter_nonactive_spikes’
All user-level objects in a package should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... WARNING
Codoc mismatches from documentation object 'calc_burst_distributions':
calc_burst_distributions
  Code: function(s, min_vals = 1, xlimit = 25, bins_in_sec = 5, feature
                 = "non", filter_values_by_min = 0, min_values = 0,
                 per_well = 0, outputdir = getwd(), min_electrodes = 4,
                 time_stamp = "DATE_TIME")
  Docs: function(s, minVals = 1, xlimit = 25, binsInSec = 5, feature =
                 "non", filterValuesByMin = 0, minValues = 0, perWell =
                 0, outputdir = getwd(), min_electrodes = 4, timeStamp
                 = "DATE_TIME")
  Argument names in code not in docs:
    min_vals bins_in_sec filter_values_by_min min_values per_well
    time_stamp
  Argument names in docs not in code:
    minVals binsInSec filterValuesByMin minValues perWell timeStamp
  Mismatches in argument names (first 3):
    Position: 2 Code: min_vals Docs: minVals
    Position: 4 Code: bins_in_sec Docs: binsInSec
    Position: 6 Code: filter_values_by_min Docs: filterValuesByMin

* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'calc_burst_distributions'
  ‘minVals’ ‘binsInSec’ ‘filterValuesByMin’ ‘minValues’ ‘perWell’
  ‘timeStamp’
Documented arguments not in \usage in documentation object 'calc_burst_distributions':
  ‘min_vals’ ‘bins_in_sec’ ‘filter_values_by_min’ ‘min_values’
  ‘per_well’ ‘time_stamp’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... WARNING
  
  Note: significantly better compression could be obtained
        by using R CMD build --resave-data
          old_size new_size compress
  S.RData    1.4Mb    798Kb       xz
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking compiled code ... OK
* checking installed files from ‘inst/doc’ ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... OK
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking re-building of vignette outputs ...